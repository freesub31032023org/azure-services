on: workflow_dispatch

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

jobs:
  deploy-vm:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "${{ github.workspace }}/vm-agent-linux"
    steps:
    - name: clone repo
      uses: actions/checkout@v3
    - name: get ssh key
      run: |
        echo $ORG_SECRET_SSH_KEY > $GITHUB_WORKSPACE/vm-agent-linux/id_rsa.pub
      env:
        ORG_SECRET_SSH_KEY: ${{ secrets.ORG_SECRET_SSH_KEY }}
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: HashiCorp - Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3
    - run: |
        terraform init \
          -backend-config "storage_account_name=$ORG_VAR_ST_NAME" \
          -backend-config "container_name=$ORG_VAR_CONTAINER_NAME" \
          -backend-config "key=$ORG_VAR_KEY" \
          -backend-config "access_key=$ORG_SECRET_ACCESS_KEY"
      env:
        ORG_VAR_ST_NAME: ${{ vars.ORG_VAR_ST_NAME }}
        ORG_VAR_CONTAINER_NAME: ${{ vars.ORG_VAR_CONTAINER_NAME }}
        ORG_VAR_KEY: ${{ vars.ORG_VAR_KEY }}
        ORG_SECRET_ACCESS_KEY: ${{ secrets.ORG_SECRET_ACCESS_KEY }}
      name: init
    - run: terraform plan -out tfplan
      name: plan
      env:
        TF_VAR_location: ${{ vars.REPO_VAR_LOCATION }}
        TF_VAR_vm_type: ${{ vars.REPO_VAR_VM_TYPE }}
        TF_VAR_ssh_key_location: "${{ github.workspace }}/vm-agent-linux/id_rsa.pub"
